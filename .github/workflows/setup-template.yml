name: 🚀 一键设置 ArXiv 论文追踪器

on:
  workflow_dispatch:
    inputs:
      setup_type:
        description: '设置类型'
        required: true
        default: 'check_secrets'
        type: choice
        options:
        - check_secrets
        - test_configuration
        - run_analysis

jobs:
  setup-guide:
    runs-on: ubuntu-latest
    steps:
    - name: 📋 检查配置状态
      run: |
        echo "🔍 检查 SOTA AI模型和邮件配置状态..."
        echo ""
        
        # 检查SOTA AI模型配置 (至少需要一个)
        ai_configured=false
        
        if [ -n "${{ secrets.CLAUDE_API_KEY }}" ]; then
          echo "✅ CLAUDE_API_KEY: 已配置 (🏆 Claude Opus 4 - 世界最强推理模型)"
          ai_configured=true
        fi
        
        if [ -n "${{ secrets.GEMINI_API_KEY }}" ]; then
          echo "✅ GEMINI_API_KEY: 已配置 (🔬 Gemini 2.5 Pro Preview - Google最新SOTA)"
          ai_configured=true
        fi
        
        if [ -n "${{ secrets.OPENAI_API_KEY }}" ]; then
          echo "✅ OPENAI_API_KEY: 已配置 (🧠 OpenAI o3 - 推理能力王者)"
          ai_configured=true
        fi
        
        if [ -n "${{ secrets.DEEPSEEK_API_KEY }}" ]; then
          echo "✅ DEEPSEEK_API_KEY: 已配置 (💰 DeepSeek R1 - 高性价比SOTA)"
          ai_configured=true
        fi
        
        if [ "$ai_configured" = false ]; then
          echo "❌ 未配置任何AI API密钥，请至少配置一个AI模型"
          secrets_status="missing"
        else
          echo "🎯 AI模型配置完成，系统将自动选择最佳可用模型"
        fi
        
        # 检查必需的邮件配置
        # 保持 secrets_status 的值，不重置
        
        if [ -z "${{ secrets.SMTP_SERVER }}" ]; then
          echo "❌ SMTP_SERVER: 未配置"
          secrets_status="missing"
        else
          echo "✅ SMTP_SERVER: 已配置"
        fi
        
        if [ -z "${{ secrets.SMTP_USERNAME }}" ]; then
          echo "❌ SMTP_USERNAME: 未配置"
          secrets_status="missing"
        else
          echo "✅ SMTP_USERNAME: 已配置"
        fi
        
        if [ -z "${{ secrets.SMTP_PASSWORD }}" ]; then
          echo "❌ SMTP_PASSWORD: 未配置"
          secrets_status="missing"
        else
          echo "✅ SMTP_PASSWORD: 已配置"
        fi
        
        if [ -z "${{ secrets.EMAIL_FROM }}" ]; then
          echo "❌ EMAIL_FROM: 未配置"
          secrets_status="missing"
        else
          echo "✅ EMAIL_FROM: 已配置"
        fi
        
        if [ -z "${{ secrets.EMAIL_TO }}" ]; then
          echo "❌ EMAIL_TO: 未配置"
          secrets_status="missing"
        else
          echo "✅ EMAIL_TO: 已配置"
        fi
        
        echo ""
        if [ "$secrets_status" = "missing" ]; then
          echo "⚠️  发现缺少的配置项！"
          echo ""
          echo "📝 配置步骤："
          echo "1. 进入仓库 Settings → Secrets and variables → Actions"
          echo "2. 点击 'New repository secret'"
          echo "3. 🤖 添加AI模型API (四选一即可，无需全部配置)："
          echo "   🏆 CLAUDE_API_KEY: Claude Opus 4 API密钥"
          echo "   🔬 GEMINI_API_KEY: Gemini 2.5 Pro Preview API密钥"  
          echo "   🧠 OPENAI_API_KEY: OpenAI o3 API密钥"
          echo "   💰 DEEPSEEK_API_KEY: DeepSeek R1 API密钥"
          echo "   ❗ 提示: 选择任意一个配置即可，系统会自动使用可用的API"
          echo "4. 📧 添加邮件配置 (必需)："
          echo "   - SMTP_SERVER: 邮件服务器 (如: smtp.gmail.com)"
          echo "   - SMTP_USERNAME: 邮箱账号"
          echo "   - SMTP_PASSWORD: 邮箱授权码"
          echo "   - EMAIL_FROM: 发件人邮箱"
          echo "   - EMAIL_TO: 收件人邮箱"
          echo ""
          echo "📖 详细配置指南: https://github.com/${{ github.repository }}/blob/main/docs/README.md"
          exit 1
        else
          echo "🎉 配置验证成功！AI模型和邮件配置均已就绪"
          echo "💡 提示: 系统已自动选择最佳可用的AI模型进行分析"
        fi

  test-configuration:
    runs-on: ubuntu-latest
    if: github.event.inputs.setup_type == 'test_configuration'
    needs: setup-guide
    steps:
    - uses: actions/checkout@v4
    
    - name: 🐍 设置 Python 环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: 📦 安装 uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: 🔧 安装依赖
      run: uv sync --frozen
    
    - name: 🔍 验证配置
      env:
        # SOTA AI模型配置
        CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        # 邮件配置
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
      run: |
        echo "🔍 运行配置验证和测试..."
        cd scripts && uv run validate_env.py

  run-test-analysis:
    runs-on: ubuntu-latest
    if: github.event.inputs.setup_type == 'run_analysis'
    needs: setup-guide
    steps:
    - uses: actions/checkout@v4
    
    - name: 🐍 设置 Python 环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: 📦 安装 uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    
    - name: 🔧 安装依赖
      run: uv sync --frozen
    
    - name: 🧪 运行测试分析
      env:
        # SOTA AI模型配置
        CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        # 邮件配置
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
        EMAIL_TO: ${{ secrets.EMAIL_TO }}
        # 测试配置
        MAX_PAPERS: 3  # 测试时只分析3篇论文
        SEARCH_DAYS: 1
      run: |
        echo "🚀 运行测试分析（少量论文）..."
        cd src && uv run python main.py 